<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--命名空间,接口的全路径名-->
<mapper namespace="com.dilo.gmall.product.mapper.BaseAttrInfoMapper">

    <!--    id:返回结果集的唯一标识
            type :返回结果集的数据类型
            autoMapping:自动映射,(数据库表的字段,非数据库表的字段不能映射),不能有重复字段,需要起别名
    -->
    <resultMap id="baseAttrInfoMap" type="com.dilo.gmall.model.product.BaseAttrInfo" autoMapping="true">
        <!--
            id:表示主键
            column:执行sql语句之后显示的字段
            property:实体类属性

        -->

        <!--<id column="id" property="id"></id>-->
        <!--
            result:除主键之外的字段
        -->
        <!--<result column="" property=""></result>-->

    <!--
        平台属性值,关系1对n
        collection:配置一对多
        property:实体类的属性
        ofType : 返回的数据类型

  -->
        <id column="id" property="id"/>
        <collection property="attrValueList" ofType="com.dilo.gmall.model.product.BaseAttrValue" autoMapping="true">
            <!--如果有字段重复则起别名-->
            <id property="id" column="attr_value_id"/>
        </collection>
    </resultMap>

    <select id="selectBaseAttrInfoList" resultMap="baseAttrInfoMap">
        SELECT
        bai.id, bai.attr_name, bai.category_id,  bai.category_level,
        bav.id attr_value_id, bav.value_name,  bav.attr_id
        FROM
        base_attr_info bai
        INNER JOIN base_attr_value bav ON bai.id = bav.attr_id
        <where>
            <if test="category1Id != null and category1Id != 0">
                or (bai.category_id = #{category1Id} and bai.category_level = 1)
            </if>
            <if test="category2Id != null and category2Id != 0">
                or (bai.category_id = #{category2Id} and bai.category_level = 2)
            </if>
            <if test="category3Id != null and category3Id != 0">
                or (bai.category_id = #{category3Id} and bai.category_level = 3)
            </if>
        </where>
        order by bai.category_level, bai.id
    </select>

    <select id="selectBaseAttrInfoListBySkuId" resultMap="baseAttrInfoMap">
        SELECT
            bai.id,
            bai.attr_name,
            bai.category_id,
            bai.category_level,
            bav.id attr_value_id,
            bav.value_name,
            bav.attr_id
        FROM
            base_attr_info bai
                INNER JOIN base_attr_value bav ON bai.id = bav.attr_id
                INNER JOIN sku_attr_value sav ON sav.value_id = bav.id
        WHERE
            sav.sku_id = #{skuId}

    </select>
</mapper>

  
 