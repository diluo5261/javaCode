<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

<!--
    注入:就是赋值的意思
    简单类型:spring 中规定 java基本数据类型,和 String 都是简单的类型
    di : 给属性赋值
    1. set 注入(设值注入) : spring 调用类的set方法,你可以在set 方法中完成赋值属性
        1) 简单类型的set注入,必须有相应的 set 方法
            <bean id = "xx" class ="yy">
                <property name = "属性名字" value = "此属性的值"/>

                一个property 只能给一个属性赋值

                <property....>
            </bean>


        2)引用类型的set 注入 : spring调用类的set方法
            <bean id = "xx" class ="yy">
                    <property name = "属性名字" ref = "bean的id(对象的名称)"/>

                </bean>

     2.构造注入:spring 调用类有参数构造方法,在创建对象的同时,在构造方法中给属性赋值

           构造注入使用 <constructor - arg > 标签: 一个<constructor - arg > 表示构造方法的一个参数
           <constructor - arg >  属性
           name : 表示构造方法的形参名
           index : 表示构造方法的参数位置,从左往右位置是 0 , 1 ,2 d的顺序
           value : 构造方法的形参类型是简单类型的,使用 value
           ref : 构造方法的形参是引用类型的, 使用 ref




-->


<!--    使用name属性实现构造注入-->
    <bean id="Student" class="com.dilo.ba03.Student">
        <constructor-arg name="name" value="张三"/>
        <constructor-arg name="age" value="56"/>
        <constructor-arg name="school" ref="myschool"/>

    </bean>

    <bean name="myschool" class="com.dilo.ba03.School">
      <constructor-arg name="name" value="大学"/>
        <constructor-arg name="address" value="北京"/>

    </bean>

<!--    使用index属性-->

<!--    省略index 默认按顺序赋值-->
    <bean name="student2" class="com.dilo.ba03.Student">
        <constructor-arg index="0" value="李四"/>
        <constructor-arg index="1" value="58"/>
        <constructor-arg index="2" ref="myschool"/>


    </bean>

</beans>

