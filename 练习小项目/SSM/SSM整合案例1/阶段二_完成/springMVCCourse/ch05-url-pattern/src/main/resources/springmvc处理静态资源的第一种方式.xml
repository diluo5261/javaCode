<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">


<!--    声明组件扫描器-->
    <context:component-scan base-package="com.dilo.controller"/>

<!--    声明springmvc框架中的视图解析器,帮助开发人员设置视图文件的路径-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
<!--        前缀:视图文件的路径
            前后都有 /  前面/ 表示根路径, 后面 / 表示是个路径
 -->
        <property name="prefix" value="/WEB-INF/view/"/>
<!--        后缀:视图文件的扩展名-->
        <property name="suffix" value=".jsp"/>
    </bean>

<!--    没有注解驱动-->
<!--    default-servlet-handler  和 @RequestMapping注解有冲突,需要加入annotation-driver 解决问题
        如果没有注册驱动,会把所有的请求都转发给 tomcat的default,就会报错
-->
    <mvc:annotation-driven/>

<!--    第一种处理静态资源的方式:
        需要在springMVC配置文件加入 <mvc:default-servlet-handle>
        原理是:加入这个标签后,框架会创建控制器对象DefaultServletHttpRequestHandler(类似我们自己创建的MyController),
        这个对象可以把接收的请求转发给tomcat的default这个Servlet
-->

    <mvc:default-servlet-handler/>
</beans>